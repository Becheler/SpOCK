name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work
    # equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set Conan environment variables
      run: |
           echo "CONAN_USER_HOME=/tmp/conan" >> $GITHUB_ENV

    - uses: actions/cache@v3
      id: cache
      with:
        path: ${{ github.workspace }}/${{ env.CONAN_USER_HOME }}/.conan
        key: ${{ runner.os }}-conan-cache-${{ hashFiles('**/conanfile.txt') }}

    - name: Get GCC-10
      id: compiler
      run:   |
             sudo apt update
             sudo apt install gcc-10 g++-10
      env:
        CC: /usr/bin/gcc-10
        CXX: usr/bin/g++-10

    - name: Install Doxygen
      run: sudo apt-get update && sudo apt-get install -y --no-install-recommends doxygen graphviz

    - name: Conan installation
      id: conan
      uses: turtlebrowser/get-conan@v1.0

    - name: Conan version
      run: echo "${{ steps.conan.outputs.version }}"

      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      # DCMAKE_C_COMPILER avoids https://github.com/conan-io/conan/issues/4322
    - name: CMake configuration
      env:
        CC: ${{steps.compiler.CC}}
        CXX: ${{steps.compiler.CXX}}
      run:  |
            cmake -B ${{github.workspace}}/build \
                  -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
                  -D CMAKE_C_COMPILER=/usr/bin/gcc-10 \
                  -D CMAKE_CXX_COMPILER=/usr/bin/g++-10

    - name: Cmake build
      run:  |
            cmake --build ${{github.workspace}}/build \
                  --config ${{env.BUILD_TYPE}}

    - name: Cmake test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Doxygen documentation generation
      working-directory: ${{github.workspace}}/build
      run: make doc

    - name: Documentation moving generated files
      run: mv ${{github.workspace}}/build/doc/html ./doc/api

    - name: Documentation deploy to Github Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./doc/api
